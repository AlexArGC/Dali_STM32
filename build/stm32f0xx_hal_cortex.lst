ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_hal_cortex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/S
  18              		.section	.text.__NVIC_SetPriority,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	__NVIC_SetPriority:
  25              	.LVL0:
  26              	.LFB31:
  27              		.file 2 "C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include/core_cm0
   1:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**************************************************************************//**
   2:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * @file     core_cm0.h
   3:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * @version  V5.0.5
   5:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * @date     28. May 2018
   6:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
   7:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*
   8:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  *
  10:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  *
  12:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * not use this file except in compliance with the License.
  14:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * You may obtain a copy of the License at
  15:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  *
  16:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  *
  18:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * See the License for the specific language governing permissions and
  22:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  * limitations under the License.
  23:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
  24:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  25:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #if   defined ( __ICCARM__ )
  26:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #elif defined (__clang__)
  28:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  29:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #endif
  30:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  31:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 2


  32:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_GENERIC
  33:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  34:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #include <stdint.h>
  35:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  36:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
  37:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  extern "C" {
  38:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #endif
  39:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  40:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
  41:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  44:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  46:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  47:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****      Unions are used for effective representation of core registers.
  49:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  50:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****      Function-like macros are used to allow more efficient code.
  52:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
  53:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  54:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  55:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*******************************************************************************
  56:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  *                 CMSIS definitions
  57:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
  58:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
  59:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \ingroup Cortex_M0
  60:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   @{
  61:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
  62:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  63:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #include "cmsis_version.h"
  64:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  
  65:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*  CMSIS CM0 definitions */
  66:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  69:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  71:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define __CORTEX_M                (0U)                                   /*!< Cortex-M Core */
  72:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  73:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     This core does not support an FPU at all
  75:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** */
  76:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define __FPU_USED       0U
  77:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  78:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #if defined ( __CC_ARM )
  79:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #if defined __TARGET_FPU_VFP
  80:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #endif
  82:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  83:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #if defined __ARM_PCS_VFP
  85:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #endif
  87:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  88:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #elif defined ( __GNUC__ )
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 3


  89:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #endif
  92:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  93:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #elif defined ( __ICCARM__ )
  94:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #if defined __ARMVFP__
  95:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #endif
  97:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
  98:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #elif defined ( __TI_ARM__ )
  99:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 100:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #endif
 102:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 103:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #elif defined ( __TASKING__ )
 104:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #if defined __FPU_VFP__
 105:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #endif
 107:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 108:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #elif defined ( __CSMC__ )
 109:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 110:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #endif
 112:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 113:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #endif
 114:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 115:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 117:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 118:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 119:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 120:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #endif
 121:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 122:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 123:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 124:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #ifndef __CMSIS_GENERIC
 125:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 126:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 127:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 128:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 129:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 130:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  extern "C" {
 131:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #endif
 132:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 133:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* check device defines and use defaults */
 134:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 135:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #ifndef __CM0_REV
 136:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #define __CM0_REV               0x0000U
 137:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 138:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #endif
 139:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 140:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 141:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 142:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 143:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #endif
 144:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 145:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #ifndef __Vendor_SysTickConfig
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 4


 146:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 147:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 148:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #endif
 149:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #endif
 150:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 151:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 152:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 153:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 154:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 155:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 156:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     \li to specify the access to peripheral variables.
 157:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 158:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** */
 159:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 160:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 161:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #else
 162:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 163:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #endif
 164:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 165:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 166:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 167:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* following defines should be used for structure members */
 168:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 169:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 170:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 171:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 172:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*@} end of group Cortex_M0 */
 173:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 174:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 175:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 176:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*******************************************************************************
 177:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  *                 Register Abstraction
 178:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   Core Register contain:
 179:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   - Core Register
 180:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   - Core NVIC Register
 181:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   - Core SCB Register
 182:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   - Core SysTick Register
 183:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 184:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 185:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 186:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 187:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** */
 188:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 189:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 190:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 191:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 192:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief      Core Register type definitions.
 193:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   @{
 194:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 195:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 196:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 197:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 198:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 199:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** typedef union
 200:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 201:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   struct
 202:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 5


 203:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 204:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 205:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 206:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 207:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 208:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 209:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 210:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** } APSR_Type;
 211:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 212:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* APSR Register Definitions */
 213:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 214:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 215:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 216:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 217:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 218:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 219:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 220:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 221:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 222:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 223:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 224:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 225:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 226:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 227:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 228:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 229:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** typedef union
 230:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 231:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   struct
 232:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 233:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 234:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 235:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 236:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 237:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** } IPSR_Type;
 238:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 239:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* IPSR Register Definitions */
 240:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 241:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 242:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 243:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 244:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 245:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 246:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 247:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** typedef union
 248:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 249:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   struct
 250:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 251:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 252:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 253:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 254:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 255:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 256:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 257:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 258:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 259:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 6


 260:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 261:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** } xPSR_Type;
 262:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 263:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* xPSR Register Definitions */
 264:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 265:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 266:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 267:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 268:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 269:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 270:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 271:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 272:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 273:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 274:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 275:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 276:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 277:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 278:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 279:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 280:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 281:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 282:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 283:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 284:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 285:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 286:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** typedef union
 287:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 288:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   struct
 289:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 290:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 291:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 292:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 293:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 294:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 295:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** } CONTROL_Type;
 296:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 297:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* CONTROL Register Definitions */
 298:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 299:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 300:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 301:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CORE */
 302:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 303:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 304:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 305:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 306:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 308:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   @{
 309:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 310:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 311:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 312:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 313:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 314:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** typedef struct
 315:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 316:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 7


 317:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED0[31U];
 318:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 319:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****         uint32_t RSERVED1[31U];
 320:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 321:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED2[31U];
 322:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 323:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED3[31U];
 324:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED4[64U];
 325:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 326:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }  NVIC_Type;
 327:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 328:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_NVIC */
 329:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 330:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 331:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 332:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 333:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 334:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 335:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   @{
 336:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 337:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 338:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 339:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 340:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 341:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** typedef struct
 342:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 343:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 344:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 345:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED0;
 346:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 347:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 348:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 349:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED1;
 350:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 351:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 352:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** } SCB_Type;
 353:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 354:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* SCB CPUID Register Definitions */
 355:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 356:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 357:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 358:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 359:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 360:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 361:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 362:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 363:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 364:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 365:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 366:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 367:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 368:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 369:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 370:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 371:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 372:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 373:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 8


 374:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 375:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 376:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 377:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 378:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 379:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 380:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 381:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 382:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 383:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 384:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 385:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 386:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 387:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 388:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 389:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 390:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 391:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 392:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 393:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 394:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 395:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 396:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 397:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 398:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 399:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 400:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 401:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 402:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 403:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 404:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 405:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 406:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 407:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 408:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 409:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 410:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 411:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 412:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 413:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 414:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* SCB System Control Register Definitions */
 415:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 416:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 417:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 418:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 419:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 420:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 421:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 422:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 423:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 424:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* SCB Configuration Control Register Definitions */
 425:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 426:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 427:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 428:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 429:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 430:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 9


 431:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 432:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 433:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 434:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 435:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SCB */
 436:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 437:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 438:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 439:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 440:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 441:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 442:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   @{
 443:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 444:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 445:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 446:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 447:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 448:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** typedef struct
 449:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 450:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 451:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 452:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 453:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 454:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** } SysTick_Type;
 455:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 456:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* SysTick Control / Status Register Definitions */
 457:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 458:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 459:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 460:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 461:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 462:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 463:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 464:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 465:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 466:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 467:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 468:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 469:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* SysTick Reload Register Definitions */
 470:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 471:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 472:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 473:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* SysTick Current Register Definitions */
 474:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 475:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 476:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 477:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* SysTick Calibration Register Definitions */
 478:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 479:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 480:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 481:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 482:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 483:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 484:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 485:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 486:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 487:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SysTick */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 10


 488:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 489:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 490:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 491:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 492:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 493:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 494:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 495:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   @{
 496:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 497:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 498:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 499:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 500:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 501:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 502:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 503:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 504:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   @{
 505:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 506:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 507:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 508:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 509:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param[in] field  Name of the register bit field.
 510:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 511:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \return           Masked and shifted value.
 512:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** */
 513:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 514:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 515:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 516:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 517:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param[in] field  Name of the register bit field.
 518:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 519:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \return           Masked and shifted bit field value.
 520:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** */
 521:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 522:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 523:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 524:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 525:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 526:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 527:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 528:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 529:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 530:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   @{
 531:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 532:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 533:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* Memory mapping of Core Hardware */
 534:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 535:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 536:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 537:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 538:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 539:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 540:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 541:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 542:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 543:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 544:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*@} */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 11


 545:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 546:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 547:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 548:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*******************************************************************************
 549:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  *                Hardware Abstraction Layer
 550:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   Core Function Interface contains:
 551:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   - Core NVIC Functions
 552:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   - Core SysTick Functions
 553:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   - Core Register Access Functions
 554:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 555:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 556:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 557:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** */
 558:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 559:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 560:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 561:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 562:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 563:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 564:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 565:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 566:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   @{
 567:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 568:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 569:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #ifdef CMSIS_NVIC_VIRTUAL
 570:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 571:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 572:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #endif
 573:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 574:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #else
 575:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 576:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 577:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 578:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 579:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 580:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 581:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 582:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 583:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0 */
 584:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 585:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 586:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 587:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 588:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 589:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 590:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 591:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 592:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #endif
 593:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 594:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #else
 595:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define NVIC_SetVector              __NVIC_SetVector
 596:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   #define NVIC_GetVector              __NVIC_GetVector
 597:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 598:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 599:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define NVIC_USER_IRQ_OFFSET          16
 600:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 601:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 12


 602:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 603:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 604:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 605:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 606:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 607:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 608:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 609:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 610:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 611:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 612:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 613:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 614:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 615:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 616:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 617:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 618:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   Enable Interrupt
 619:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 620:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 621:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 622:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 623:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 624:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 625:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 626:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 627:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 628:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 629:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 630:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 631:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 632:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 633:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   Get Interrupt Enable status
 634:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 635:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 636:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \return             0  Interrupt is not enabled.
 637:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \return             1  Interrupt is enabled.
 638:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 639:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 640:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 641:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 642:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 643:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 644:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 645:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 646:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   else
 647:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 648:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     return(0U);
 649:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 650:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 651:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 652:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 653:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 654:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   Disable Interrupt
 655:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 656:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 657:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 658:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 13


 659:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 660:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 661:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 662:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 663:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 664:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     __DSB();
 665:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     __ISB();
 666:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 667:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 668:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 669:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 670:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 671:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   Get Pending Interrupt
 672:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 673:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 674:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \return             0  Interrupt status is not pending.
 675:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \return             1  Interrupt status is pending.
 676:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 677:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 678:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 679:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 680:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 681:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 682:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 683:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 684:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   else
 685:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 686:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     return(0U);
 687:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 688:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 689:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 690:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 691:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 692:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   Set Pending Interrupt
 693:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
 694:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 695:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 696:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 697:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 698:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 699:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 700:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 701:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 702:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 703:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 704:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 705:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 706:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 707:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   Clear Pending Interrupt
 708:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 709:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 710:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 711:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 712:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 713:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 714:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 715:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 14


 716:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 717:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 718:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 719:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 720:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 721:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 722:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   Set Interrupt Priority
 723:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
 724:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            The interrupt number can be positive to specify a device specific interrupt,
 725:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            or negative to specify a processor exception.
 726:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 727:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]  priority  Priority to set.
 728:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \note    The priority cannot be set for every processor exception.
 729:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 730:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 731:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
  28              		.loc 2 731 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 2 731 1 is_stmt 0 view .LVU1
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
 732:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
  40              		.loc 2 732 3 is_stmt 1 view .LVU2
  41              		.loc 2 732 6 is_stmt 0 view .LVU3
  42 0002 0028     		cmp	r0, #0
  43 0004 11DB     		blt	.L2
 733:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 734:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
  44              		.loc 2 734 5 is_stmt 1 view .LVU4
  45              		.loc 2 734 53 is_stmt 0 view .LVU5
  46 0006 8308     		lsrs	r3, r0, #2
  47              		.loc 2 734 52 view .LVU6
  48 0008 134D     		ldr	r5, .L4
  49 000a C033     		adds	r3, r3, #192
  50 000c 9B00     		lsls	r3, r3, #2
  51 000e 5C59     		ldr	r4, [r3, r5]
  52              		.loc 2 734 83 view .LVU7
  53 0010 0322     		movs	r2, #3
  54 0012 1040     		ands	r0, r2
  55              	.LVL1:
  56              		.loc 2 734 83 view .LVU8
  57 0014 C000     		lsls	r0, r0, #3
  58              		.loc 2 734 80 view .LVU9
  59 0016 FC32     		adds	r2, r2, #252
  60 0018 1600     		movs	r6, r2
  61 001a 8640     		lsls	r6, r6, r0
  62              		.loc 2 734 33 view .LVU10
  63 001c B443     		bics	r4, r6
 735:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  64              		.loc 2 735 20 view .LVU11
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 15


  65 001e 8901     		lsls	r1, r1, #6
  66              	.LVL2:
  67              		.loc 2 735 48 view .LVU12
  68 0020 0A40     		ands	r2, r1
  69              		.loc 2 735 68 view .LVU13
  70 0022 8240     		lsls	r2, r2, r0
 734:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  71              		.loc 2 734 102 view .LVU14
  72 0024 2243     		orrs	r2, r4
 734:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  73              		.loc 2 734 30 view .LVU15
  74 0026 5A51     		str	r2, [r3, r5]
  75              	.L1:
 736:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 737:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   else
 738:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
 740:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 741:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 742:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
  76              		.loc 2 742 1 view .LVU16
  77              		@ sp needed
  78 0028 70BD     		pop	{r4, r5, r6, pc}
  79              	.LVL3:
  80              	.L2:
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  81              		.loc 2 739 5 is_stmt 1 view .LVU17
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  82              		.loc 2 739 53 is_stmt 0 view .LVU18
  83 002a 0F23     		movs	r3, #15
  84 002c 0340     		ands	r3, r0
  85 002e 083B     		subs	r3, r3, #8
  86 0030 9B08     		lsrs	r3, r3, #2
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  87              		.loc 2 739 52 view .LVU19
  88 0032 0633     		adds	r3, r3, #6
  89 0034 9B00     		lsls	r3, r3, #2
  90 0036 094A     		ldr	r2, .L4+4
  91 0038 9446     		mov	ip, r2
  92 003a 6344     		add	r3, r3, ip
  93 003c 5C68     		ldr	r4, [r3, #4]
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  94              		.loc 2 739 83 view .LVU20
  95 003e 0322     		movs	r2, #3
  96 0040 1040     		ands	r0, r2
  97              	.LVL4:
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  98              		.loc 2 739 83 view .LVU21
  99 0042 C000     		lsls	r0, r0, #3
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 100              		.loc 2 739 80 view .LVU22
 101 0044 FC32     		adds	r2, r2, #252
 102 0046 1500     		movs	r5, r2
 103 0048 8540     		lsls	r5, r5, r0
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 104              		.loc 2 739 33 view .LVU23
 105 004a AC43     		bics	r4, r5
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 16


 740:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 106              		.loc 2 740 20 view .LVU24
 107 004c 8901     		lsls	r1, r1, #6
 108              	.LVL5:
 740:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 109              		.loc 2 740 48 view .LVU25
 110 004e 0A40     		ands	r2, r1
 740:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 111              		.loc 2 740 68 view .LVU26
 112 0050 8240     		lsls	r2, r2, r0
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 113              		.loc 2 739 102 view .LVU27
 114 0052 2243     		orrs	r2, r4
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 115              		.loc 2 739 30 view .LVU28
 116 0054 5A60     		str	r2, [r3, #4]
 117              		.loc 2 742 1 view .LVU29
 118 0056 E7E7     		b	.L1
 119              	.L5:
 120              		.align	2
 121              	.L4:
 122 0058 00E100E0 		.word	-536813312
 123 005c 00ED00E0 		.word	-536810240
 124              		.cfi_endproc
 125              	.LFE31:
 127              		.section	.text.__NVIC_GetPriority,"ax",%progbits
 128              		.align	1
 129              		.syntax unified
 130              		.code	16
 131              		.thumb_func
 133              	__NVIC_GetPriority:
 134              	.LVL6:
 135              	.LFB32:
 743:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 744:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 745:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 746:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   Get Interrupt Priority
 747:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
 748:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            The interrupt number can be positive to specify a device specific interrupt,
 749:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            or negative to specify a processor exception.
 750:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]   IRQn  Interrupt number.
 751:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \return             Interrupt Priority.
 752:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****                       Value is aligned automatically to the implemented priority bits of the microc
 753:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 754:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
 755:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 136              		.loc 2 755 1 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 756:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 757:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 141              		.loc 2 757 3 view .LVU31
 142              		.loc 2 757 6 is_stmt 0 view .LVU32
 143 0000 0028     		cmp	r0, #0
 144 0002 0CDB     		blt	.L7
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 17


 758:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 759:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     return((uint32_t)(((NVIC->IP[ _IP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U -
 145              		.loc 2 759 5 is_stmt 1 view .LVU33
 146              		.loc 2 759 35 is_stmt 0 view .LVU34
 147 0004 8308     		lsrs	r3, r0, #2
 148              		.loc 2 759 33 view .LVU35
 149 0006 C033     		adds	r3, r3, #192
 150 0008 9B00     		lsls	r3, r3, #2
 151 000a 0E4A     		ldr	r2, .L9
 152 000c 9B58     		ldr	r3, [r3, r2]
 153              		.loc 2 759 53 view .LVU36
 154 000e 0322     		movs	r2, #3
 155 0010 0240     		ands	r2, r0
 156 0012 D200     		lsls	r2, r2, #3
 157              		.loc 2 759 50 view .LVU37
 158 0014 D340     		lsrs	r3, r3, r2
 159              		.loc 2 759 12 view .LVU38
 160 0016 9B09     		lsrs	r3, r3, #6
 161 0018 0320     		movs	r0, #3
 162              	.LVL7:
 163              		.loc 2 759 12 view .LVU39
 164 001a 1840     		ands	r0, r3
 165              	.L6:
 760:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 761:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   else
 762:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 763:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     return((uint32_t)(((SCB->SHP[_SHP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U -
 764:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 765:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 166              		.loc 2 765 1 view .LVU40
 167              		@ sp needed
 168 001c 7047     		bx	lr
 169              	.LVL8:
 170              	.L7:
 763:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 171              		.loc 2 763 5 is_stmt 1 view .LVU41
 763:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 172              		.loc 2 763 34 is_stmt 0 view .LVU42
 173 001e 0F23     		movs	r3, #15
 174 0020 0340     		ands	r3, r0
 175 0022 083B     		subs	r3, r3, #8
 176 0024 9B08     		lsrs	r3, r3, #2
 763:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 177              		.loc 2 763 33 view .LVU43
 178 0026 0633     		adds	r3, r3, #6
 179 0028 9B00     		lsls	r3, r3, #2
 180 002a 074A     		ldr	r2, .L9+4
 181 002c 9446     		mov	ip, r2
 182 002e 6344     		add	r3, r3, ip
 183 0030 5B68     		ldr	r3, [r3, #4]
 763:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 184              		.loc 2 763 53 view .LVU44
 185 0032 0322     		movs	r2, #3
 186 0034 0240     		ands	r2, r0
 187 0036 D200     		lsls	r2, r2, #3
 763:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 188              		.loc 2 763 50 view .LVU45
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 18


 189 0038 D340     		lsrs	r3, r3, r2
 763:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 190              		.loc 2 763 12 view .LVU46
 191 003a 9B09     		lsrs	r3, r3, #6
 192 003c 0320     		movs	r0, #3
 193              	.LVL9:
 763:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 194              		.loc 2 763 12 view .LVU47
 195 003e 1840     		ands	r0, r3
 196 0040 ECE7     		b	.L6
 197              	.L10:
 198 0042 C046     		.align	2
 199              	.L9:
 200 0044 00E100E0 		.word	-536813312
 201 0048 00ED00E0 		.word	-536810240
 202              		.cfi_endproc
 203              	.LFE32:
 205              		.section	.text.__NVIC_SystemReset,"ax",%progbits
 206              		.align	1
 207              		.syntax unified
 208              		.code	16
 209              		.thumb_func
 211              	__NVIC_SystemReset:
 212              	.LFB37:
 766:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 767:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 768:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 769:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   Encode Priority
 770:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details Encodes the priority for an interrupt with the given priority group,
 771:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            preemptive priority value, and subpriority value.
 772:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            In case of a conflict between priority grouping and available
 773:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
 774:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]     PriorityGroup  Used priority group.
 775:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
 776:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
 777:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
 778:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 779:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
 780:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 781:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 782:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   uint32_t PreemptPriorityBits;
 783:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   uint32_t SubPriorityBits;
 784:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 785:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 786:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 787:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 788:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   return (
 789:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 790:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 791:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****          );
 792:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 793:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 794:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 795:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 796:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   Decode Priority
 797:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details Decodes an interrupt priority value with a given priority group to
 798:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            preemptive priority value and subpriority value.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 19


 799:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            In case of a conflict between priority grouping and available
 800:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
 801:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
 802:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]     PriorityGroup  Used priority group.
 803:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
 804:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
 805:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 806:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
 807:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 808:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 809:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   uint32_t PreemptPriorityBits;
 810:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   uint32_t SubPriorityBits;
 811:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 812:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 813:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 814:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 815:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
 816:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 817:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 818:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 819:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 820:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 821:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 822:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   Set Interrupt Vector
 823:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
 824:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            The interrupt number can be positive to specify a device specific interrupt,
 825:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            or negative to specify a processor exception.
 826:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            Address 0 must be mapped to SRAM.
 827:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]   IRQn      Interrupt number
 828:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]   vector    Address of interrupt handler function
 829:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 830:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
 831:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 832:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   uint32_t *vectors = (uint32_t *)0x0U;
 833:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
 834:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 835:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 836:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 837:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 838:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   Get Interrupt Vector
 839:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details Reads an interrupt vector from interrupt vector table.
 840:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            The interrupt number can be positive to specify a device specific interrupt,
 841:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            or negative to specify a processor exception.
 842:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]   IRQn      Interrupt number.
 843:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \return                 Address of interrupt handler function
 844:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 845:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
 846:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 847:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   uint32_t *vectors = (uint32_t *)0x0U;
 848:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
 849:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 850:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 851:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 852:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 853:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   System Reset
 854:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details Initiates a system reset request to reset the MCU.
 855:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 20


 856:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
 857:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 213              		.loc 2 857 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ Volatile: function does not return.
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 858:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __DSB();                                                          /* Ensure all outstanding memor
 219              		.loc 2 858 3 view .LVU49
 220              	.LBB26:
 221              	.LBI26:
 222              		.file 3 "C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include/cmsis_gc
   1:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.0.4
   5:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @date     09. April 2018
   6:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /*
   8:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  *
  10:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  *
  12:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  *
  16:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  *
  18:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
  24:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  25:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  28:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  34:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef __has_builtin
  36:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  38:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  39:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  41:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                                  __asm
  42:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  43:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  44:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 21


  45:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  46:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  49:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif                                           
  52:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  55:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  56:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  58:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  59:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  61:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  62:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  64:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  67:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  70:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  78:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  86:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  94:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 22


 102:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 110:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
 111:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 113:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef   __RESTRICT
 114:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 116:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 117:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 118:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   @{
 122:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 123:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 124:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 125:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 129:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 131:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 133:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 134:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 135:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 136:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 140:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 142:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 144:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 145:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 146:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 147:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 148:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 150:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 151:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 153:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 154:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 155:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 157:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 158:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 23


 159:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 160:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 162:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 165:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 166:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 168:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 169:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 170:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 172:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 173:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 174:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 175:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 176:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 177:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 178:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 181:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 183:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 185:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 186:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 187:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 189:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 193:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 195:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 197:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 198:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 199:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 200:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 201:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 202:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 204:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 205:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 207:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 208:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 209:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 211:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 212:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 213:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 214:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 215:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 24


 216:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 218:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 219:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 221:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 222:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 223:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 225:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 226:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 227:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 228:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 229:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 230:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 232:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 233:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 235:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 236:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 237:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 239:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 240:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 241:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 242:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 243:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 246:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 247:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 249:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 250:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 251:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 253:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 254:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 255:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 256:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 258:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 261:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 262:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 264:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 265:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 266:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 268:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 269:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 270:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 271:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 272:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 25


 273:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 277:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 279:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 281:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 282:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 283:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 285:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 289:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 291:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 293:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 294:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 295:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 296:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 297:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 300:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 301:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 303:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 304:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 305:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 307:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 308:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 309:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 310:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 312:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 315:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 316:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 318:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 319:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 320:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 322:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 323:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 324:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 325:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 326:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 327:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 26


 330:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 331:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 333:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 335:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 336:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 337:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 339:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 343:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 345:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 347:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 348:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 349:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 350:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 352:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               SP Register value
 355:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 356:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 358:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 359:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 360:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 362:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 363:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 364:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 365:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 366:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 370:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 372:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 374:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 375:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 376:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 377:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 378:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 379:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 381:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 382:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 384:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 385:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 386:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 27


 387:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 388:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 389:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 390:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 391:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 393:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 396:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 397:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 399:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 400:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 401:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 403:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 404:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 405:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 406:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 407:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 408:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 409:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 412:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 414:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 416:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 417:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 418:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 420:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 424:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 426:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 428:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 429:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 430:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 431:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 435:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 436:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 439:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 441:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 443:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 28


 444:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 445:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 446:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 447:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 450:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 452:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 454:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 455:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 456:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 457:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 458:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 460:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 461:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 463:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 464:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 465:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 467:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 468:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 469:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 470:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 472:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 475:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 476:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 478:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 479:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 480:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 482:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 483:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 484:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 485:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 486:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 487:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 488:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 491:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 493:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 495:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 496:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 497:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 499:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 29


 501:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 503:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 505:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 507:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 508:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 509:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 510:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 511:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 516:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 518:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 520:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 521:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 522:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 523:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 524:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 526:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 527:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 529:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 530:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 531:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 533:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 534:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 535:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 536:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 538:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 541:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 542:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 544:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 545:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 546:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 548:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 549:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 550:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 551:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 552:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 553:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 554:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 557:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 30


 558:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 559:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 561:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 562:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 563:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 565:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 569:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 571:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 573:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 574:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 575:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 579:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 580:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 583:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 584:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   mode.
 588:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   
 589:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 591:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 592:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 594:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 598:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 599:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 600:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return result;
 602:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 603:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 604:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 605:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 607:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 611:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 613:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 614:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 31


 615:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 616:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 619:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 620:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 621:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return result;
 623:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 624:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 625:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 626:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 627:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 628:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 629:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   mode.
 633:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   
 634:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 637:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 639:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 644:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 646:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 647:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 648:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 649:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 651:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 655:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 658:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 660:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 664:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 666:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 667:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 668:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 669:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 670:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 671:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 32


 672:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   mode.
 675:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 676:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 678:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 679:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 681:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 685:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 686:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 687:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return result;
 689:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 690:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 691:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 692:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 693:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 695:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 699:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 701:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 702:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 704:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 707:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 708:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 709:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return result;
 711:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 712:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 713:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 714:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 715:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 716:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 717:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   mode.
 721:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 722:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 725:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 727:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 33


 729:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 732:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 734:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 735:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 736:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 737:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 743:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 746:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 748:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 752:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 754:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 755:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 756:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 757:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 760:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 761:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 762:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 763:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 766:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 768:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 776:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 777:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 778:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 780:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 781:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 782:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(0U);
 783:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 784:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 785:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 34


 786:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 787:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 788:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 789:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 792:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 794:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 802:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 804:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 805:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 806:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 807:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 808:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 809:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 810:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 812:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 813:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 816:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   @{
 817:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** */
 818:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 819:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 827:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 831:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 832:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 833:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 834:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 836:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 838:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 839:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 842:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 35


 843:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 844:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 845:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 846:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 847:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 850:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 852:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 853:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 854:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 855:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 857:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 859:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 860:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 861:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 865:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 866:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 868:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 870:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 871:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 872:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 873:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 877:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 223              		.loc 3 877 27 view .LVU50
 224              	.LBB27:
 878:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 879:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 225              		.loc 3 879 3 view .LVU51
 226              		.syntax divided
 227              	@ 879 "C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include/cmsis_gcc.h
 228 0000 BFF34F8F 		dsb 0xF
 229              	@ 0 "" 2
 230              		.thumb
 231              		.syntax unified
 232              	.LBE27:
 233              	.LBE26:
 859:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****                                                                        buffered write are completed
 860:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 234              		.loc 2 860 3 view .LVU52
 235              		.loc 2 860 15 is_stmt 0 view .LVU53
 236 0004 034B     		ldr	r3, .L13
 237 0006 044A     		ldr	r2, .L13+4
 238 0008 DA60     		str	r2, [r3, #12]
 861:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);
 862:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   __DSB();                                                          /* Ensure completion of memory 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 36


 239              		.loc 2 862 3 is_stmt 1 view .LVU54
 240              	.LBB28:
 241              	.LBI28:
 877:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 242              		.loc 3 877 27 view .LVU55
 243              	.LBB29:
 244              		.loc 3 879 3 view .LVU56
 245              		.syntax divided
 246              	@ 879 "C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include/cmsis_gcc.h
 247 000a BFF34F8F 		dsb 0xF
 248              	@ 0 "" 2
 249              		.thumb
 250              		.syntax unified
 251              	.L12:
 252              	.LBE29:
 253              	.LBE28:
 863:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 864:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   for(;;)                                                           /* wait until reset */
 254              		.loc 2 864 3 view .LVU57
 865:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 866:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     __NOP();
 255              		.loc 2 866 5 discriminator 1 view .LVU58
 256              		.syntax divided
 257              	@ 866 "C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include/core_cm0.h"
 258 000e C046     		nop
 259              	@ 0 "" 2
 864:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 260              		.loc 2 864 3 view .LVU59
 261              		.thumb
 262              		.syntax unified
 263 0010 FDE7     		b	.L12
 264              	.L14:
 265 0012 C046     		.align	2
 266              	.L13:
 267 0014 00ED00E0 		.word	-536810240
 268 0018 0400FA05 		.word	100270084
 269              		.cfi_endproc
 270              	.LFE37:
 272              		.section	.text.SysTick_Config,"ax",%progbits
 273              		.align	1
 274              		.syntax unified
 275              		.code	16
 276              		.thumb_func
 278              	SysTick_Config:
 279              	.LVL10:
 280              	.LFB39:
 867:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 868:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 869:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 870:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*@} end of CMSIS_Core_NVICFunctions */
 871:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 872:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 873:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* ##########################  FPU functions  #################################### */
 874:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 875:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 876:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
 877:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief    Function that provides FPU type.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 37


 878:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   @{
 879:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 880:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 881:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 882:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   get FPU type
 883:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details returns the FPU type
 884:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \returns
 885:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****    - \b  0: No FPU
 886:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****    - \b  1: Single precision FPU
 887:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****    - \b  2: Double + Single precision FPU
 888:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 889:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
 890:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 891:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     return 0U;           /* No FPU */
 892:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 893:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 894:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 895:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /*@} end of CMSIS_Core_FpuFunctions */
 896:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 897:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 898:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 899:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /* ##################################    SysTick function  ########################################
 900:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 901:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 902:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
 903:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief    Functions that configure the System.
 904:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   @{
 905:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 906:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 907:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
 908:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 909:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** /**
 910:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \brief   System Tick Configuration
 911:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 912:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            Counter is in free running mode to generate periodic interrupts.
 913:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \param [in]  ticks  Number of ticks between two interrupts.
 914:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \return          0  Function succeeded.
 915:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \return          1  Function failed.
 916:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
 917:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
 918:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****            must contain a vendor-specific implementation of this function.
 919:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****  */
 920:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 921:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 281              		.loc 2 921 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 922:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 286              		.loc 2 922 3 view .LVU61
 287              		.loc 2 922 14 is_stmt 0 view .LVU62
 288 0000 0138     		subs	r0, r0, #1
 289              	.LVL11:
 290              		.loc 2 922 6 view .LVU63
 291 0002 8023     		movs	r3, #128
 292 0004 5B04     		lsls	r3, r3, #17
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 38


 293 0006 9842     		cmp	r0, r3
 294 0008 0FD2     		bcs	.L17
 923:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 924:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     return (1UL);                                                   /* Reload value impossible */
 925:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 926:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** 
 927:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 295              		.loc 2 927 3 is_stmt 1 view .LVU64
 296              		.loc 2 927 18 is_stmt 0 view .LVU65
 297 000a 094A     		ldr	r2, .L18
 298 000c 5060     		str	r0, [r2, #4]
 928:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 299              		.loc 2 928 3 is_stmt 1 view .LVU66
 300              	.LVL12:
 301              	.LBB30:
 302              	.LBI30:
 730:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 303              		.loc 2 730 22 view .LVU67
 304              	.LBB31:
 732:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 305              		.loc 2 732 3 view .LVU68
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 306              		.loc 2 739 5 view .LVU69
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 307              		.loc 2 739 52 is_stmt 0 view .LVU70
 308 000e 0948     		ldr	r0, .L18+4
 309              	.LVL13:
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 310              		.loc 2 739 52 view .LVU71
 311 0010 036A     		ldr	r3, [r0, #32]
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 312              		.loc 2 739 33 view .LVU72
 313 0012 1B02     		lsls	r3, r3, #8
 314 0014 1B0A     		lsrs	r3, r3, #8
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 315              		.loc 2 739 102 view .LVU73
 316 0016 C021     		movs	r1, #192
 317 0018 0906     		lsls	r1, r1, #24
 318 001a 0B43     		orrs	r3, r1
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 319              		.loc 2 739 30 view .LVU74
 320 001c 0362     		str	r3, [r0, #32]
 321              	.LVL14:
 739:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 322              		.loc 2 739 30 view .LVU75
 323              	.LBE31:
 324              	.LBE30:
 929:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 325              		.loc 2 929 3 is_stmt 1 view .LVU76
 326              		.loc 2 929 18 is_stmt 0 view .LVU77
 327 001e 0023     		movs	r3, #0
 328 0020 9360     		str	r3, [r2, #8]
 930:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 329              		.loc 2 930 3 is_stmt 1 view .LVU78
 330              		.loc 2 930 18 is_stmt 0 view .LVU79
 331 0022 0733     		adds	r3, r3, #7
 332 0024 1360     		str	r3, [r2]
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 39


 931:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****                    SysTick_CTRL_TICKINT_Msk   |
 932:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
 933:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   return (0UL);                                                     /* Function successful */
 333              		.loc 2 933 3 is_stmt 1 view .LVU80
 334              		.loc 2 933 10 is_stmt 0 view .LVU81
 335 0026 0020     		movs	r0, #0
 336              	.L15:
 934:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** }
 337              		.loc 2 934 1 view .LVU82
 338              		@ sp needed
 339 0028 7047     		bx	lr
 340              	.L17:
 924:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 341              		.loc 2 924 12 view .LVU83
 342 002a 0120     		movs	r0, #1
 343 002c FCE7     		b	.L15
 344              	.L19:
 345 002e C046     		.align	2
 346              	.L18:
 347 0030 10E000E0 		.word	-536813552
 348 0034 00ED00E0 		.word	-536810240
 349              		.cfi_endproc
 350              	.LFE39:
 352              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
 353              		.align	1
 354              		.global	HAL_NVIC_SetPriority
 355              		.syntax unified
 356              		.code	16
 357              		.thumb_func
 359              	HAL_NVIC_SetPriority:
 360              	.LVL15:
 361              	.LFB40:
   1:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /**
   2:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   ******************************************************************************
   3:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @file    stm32f0xx_hal_cortex.c
   4:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @author  MCD Application Team
   5:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following
   7:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *           + Initialization and de-initialization functions
   9:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *           + Peripheral Control functions 
  10:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *
  11:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *  @verbatim
  12:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   ==============================================================================
  13:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   ==============================================================================
  15:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  16:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     [..]  
  17:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     ===========================================================
  19:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     [..]
  20:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     The Cortex-M0 exceptions are managed by CMSIS functions.
  22:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****       (#) Enable and Configure the priority of the selected IRQ Channels. 
  23:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****              The priority can be 0..3. 
  24:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  25:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****         -@- Lower priority values gives higher priority.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 40


  26:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****         -@- Priority Order:
  27:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****             (#@) Lowest priority.
  28:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****             (#@) Lowest hardware priority (IRQn position).  
  29:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  30:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****       (#)  Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority()
  31:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  32:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****       (#)  Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ()
  33:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****       
  34:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****       -@-  Negative value of IRQn_Type are not allowed.
  35:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  36:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  37:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     [..]
  38:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  39:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     ========================================================
  40:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     [..]
  41:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     Setup SysTick Timer for time base. 
  42:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****            
  43:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config()function calls the SysTick_Config() function which
  44:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****        is a CMSIS function that:
  45:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  46:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x03).
  47:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  48:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  49:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  50:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  51:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     
  52:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  53:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****        HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  54:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The HAL_SYSTICK_CLKSourceConfig() macro is defined
  55:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****        inside the stm32f0xx_hal_cortex.h file.
  56:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  57:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  58:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  59:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  60:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  61:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  62:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  63:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  64:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  65:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  66:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  67:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   @endverbatim
  68:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   ******************************************************************************
  69:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @attention
  70:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *
  71:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * Copyright (c) 2016 STMicroelectronics.
  72:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * All rights reserved.
  73:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *
  74:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  75:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * the root directory of this software component.
  76:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  77:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *
  78:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   ******************************************************************************
  79:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
  80:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  81:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
  82:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** #include "stm32f0xx_hal.h"
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 41


  83:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  84:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /** @addtogroup STM32F0xx_HAL_Driver
  85:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @{
  86:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
  87:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  88:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /** @defgroup CORTEX CORTEX
  89:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @brief CORTEX CORTEX HAL module driver
  90:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @{
  91:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
  92:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  93:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
  94:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
  95:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /* Private typedef -----------------------------------------------------------*/
  96:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /* Private define ------------------------------------------------------------*/
  97:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /* Private macro -------------------------------------------------------------*/
  98:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
  99:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /* Private function prototypes -----------------------------------------------*/
 100:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /* Exported functions ---------------------------------------------------------*/
 101:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 102:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions CORTEX Exported Functions
 103:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @{
 104:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 105:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 106:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 107:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions 
 108:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions
 109:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****  *
 110:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** @verbatim
 111:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   ==============================================================================
 112:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 113:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   ==============================================================================
 114:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     [..]
 115:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 116:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****       Systick functionalities 
 117:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 118:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** @endverbatim
 119:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @{
 120:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 121:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 122:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /**
 123:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 124:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @param  IRQn External interrupt number .
 125:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 126:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32f0xx.h file)
 127:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @param  PreemptPriority The preemption priority for the IRQn channel.
 128:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 3.
 129:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority
 130:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @param  SubPriority the subpriority level for the IRQ channel.
 131:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
 132:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         no subpriority supported in Cortex M0 based products.   
 133:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @retval None
 134:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 135:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 136:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** {
 362              		.loc 1 136 1 is_stmt 1 view -0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 42


 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              		.loc 1 136 1 is_stmt 0 view .LVU85
 367 0000 10B5     		push	{r4, lr}
 368              	.LCFI1:
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 4, -8
 371              		.cfi_offset 14, -4
 137:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* Check the parameters */
 138:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 372              		.loc 1 138 3 is_stmt 1 view .LVU86
 139:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   NVIC_SetPriority(IRQn,PreemptPriority);
 373              		.loc 1 139 3 view .LVU87
 374 0002 FFF7FEFF 		bl	__NVIC_SetPriority
 375              	.LVL16:
 140:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 141:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* Prevent unused argument(s) compilation warning */
 142:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   UNUSED(SubPriority);
 376              		.loc 1 142 3 view .LVU88
 143:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** }
 377              		.loc 1 143 1 is_stmt 0 view .LVU89
 378              		@ sp needed
 379 0006 10BD     		pop	{r4, pc}
 380              		.cfi_endproc
 381              	.LFE40:
 383              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 384              		.align	1
 385              		.global	HAL_NVIC_EnableIRQ
 386              		.syntax unified
 387              		.code	16
 388              		.thumb_func
 390              	HAL_NVIC_EnableIRQ:
 391              	.LVL17:
 392              	.LFB41:
 144:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 145:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /**
 146:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
 147:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 148:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         function should be called before. 
 149:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 150:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 151:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 152:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @retval None
 153:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 154:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 155:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** {
 393              		.loc 1 155 1 is_stmt 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 156:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* Check the parameters */
 157:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 398              		.loc 1 157 3 view .LVU91
 158:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   
 159:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* Enable interrupt */
 160:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 399              		.loc 1 160 3 view .LVU92
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 43


 400              	.LBB32:
 401              	.LBI32:
 623:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 402              		.loc 2 623 22 view .LVU93
 403              	.LBB33:
 625:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 404              		.loc 2 625 3 view .LVU94
 625:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 405              		.loc 2 625 6 is_stmt 0 view .LVU95
 406 0000 0028     		cmp	r0, #0
 407 0002 05DB     		blt	.L21
 627:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 408              		.loc 2 627 5 is_stmt 1 view .LVU96
 627:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 409              		.loc 2 627 58 is_stmt 0 view .LVU97
 410 0004 1F22     		movs	r2, #31
 411 0006 0240     		ands	r2, r0
 627:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 412              		.loc 2 627 22 view .LVU98
 413 0008 0123     		movs	r3, #1
 414 000a 9340     		lsls	r3, r3, r2
 627:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 415              		.loc 2 627 20 view .LVU99
 416 000c 014A     		ldr	r2, .L23
 417 000e 1360     		str	r3, [r2]
 418              	.LVL18:
 419              	.L21:
 627:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 420              		.loc 2 627 20 view .LVU100
 421              	.LBE33:
 422              	.LBE32:
 161:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** }
 423              		.loc 1 161 1 view .LVU101
 424              		@ sp needed
 425 0010 7047     		bx	lr
 426              	.L24:
 427 0012 C046     		.align	2
 428              	.L23:
 429 0014 00E100E0 		.word	-536813312
 430              		.cfi_endproc
 431              	.LFE41:
 433              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 434              		.align	1
 435              		.global	HAL_NVIC_DisableIRQ
 436              		.syntax unified
 437              		.code	16
 438              		.thumb_func
 440              	HAL_NVIC_DisableIRQ:
 441              	.LVL19:
 442              	.LFB42:
 162:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 163:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /**
 164:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 165:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 166:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 167:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 168:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @retval None
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 44


 169:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 170:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 171:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** {
 443              		.loc 1 171 1 is_stmt 1 view -0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 172:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* Check the parameters */
 173:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 448              		.loc 1 173 3 view .LVU103
 174:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   
 175:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* Disable interrupt */
 176:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 449              		.loc 1 176 3 view .LVU104
 450              	.LBB34:
 451              	.LBI34:
 659:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 452              		.loc 2 659 22 view .LVU105
 453              	.LBB35:
 661:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 454              		.loc 2 661 3 view .LVU106
 661:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 455              		.loc 2 661 6 is_stmt 0 view .LVU107
 456 0000 0028     		cmp	r0, #0
 457 0002 0ADB     		blt	.L25
 663:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     __DSB();
 458              		.loc 2 663 5 is_stmt 1 view .LVU108
 663:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     __DSB();
 459              		.loc 2 663 58 is_stmt 0 view .LVU109
 460 0004 1F22     		movs	r2, #31
 461 0006 0240     		ands	r2, r0
 663:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     __DSB();
 462              		.loc 2 663 22 view .LVU110
 463 0008 0123     		movs	r3, #1
 464 000a 9340     		lsls	r3, r3, r2
 663:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     __DSB();
 465              		.loc 2 663 20 view .LVU111
 466 000c 0349     		ldr	r1, .L27
 467 000e 8022     		movs	r2, #128
 468 0010 8B50     		str	r3, [r1, r2]
 664:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****     __ISB();
 469              		.loc 2 664 5 is_stmt 1 view .LVU112
 470              	.LBB36:
 471              	.LBI36:
 877:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 472              		.loc 3 877 27 view .LVU113
 473              	.LBB37:
 474              		.loc 3 879 3 view .LVU114
 475              		.syntax divided
 476              	@ 879 "C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include/cmsis_gcc.h
 477 0012 BFF34F8F 		dsb 0xF
 478              	@ 0 "" 2
 479              		.thumb
 480              		.syntax unified
 481              	.LBE37:
 482              	.LBE36:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 45


 665:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 483              		.loc 2 665 5 view .LVU115
 484              	.LBB38:
 485              	.LBI38:
 866:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 486              		.loc 3 866 27 view .LVU116
 487              	.LBB39:
 868:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 488              		.loc 3 868 3 view .LVU117
 489              		.syntax divided
 490              	@ 868 "C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include/cmsis_gcc.h
 491 0016 BFF36F8F 		isb 0xF
 492              	@ 0 "" 2
 493              	.LVL20:
 494              		.thumb
 495              		.syntax unified
 496              	.L25:
 868:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 497              		.loc 3 868 3 is_stmt 0 view .LVU118
 498              	.LBE39:
 499              	.LBE38:
 500              	.LBE35:
 501              	.LBE34:
 177:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** }
 502              		.loc 1 177 1 view .LVU119
 503              		@ sp needed
 504 001a 7047     		bx	lr
 505              	.L28:
 506              		.align	2
 507              	.L27:
 508 001c 00E100E0 		.word	-536813312
 509              		.cfi_endproc
 510              	.LFE42:
 512              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 513              		.align	1
 514              		.global	HAL_NVIC_SystemReset
 515              		.syntax unified
 516              		.code	16
 517              		.thumb_func
 519              	HAL_NVIC_SystemReset:
 520              	.LFB43:
 178:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 179:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /**
 180:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 181:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @retval None
 182:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 183:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 184:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** {
 521              		.loc 1 184 1 is_stmt 1 view -0
 522              		.cfi_startproc
 523              		@ Volatile: function does not return.
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 10B5     		push	{r4, lr}
 527              	.LCFI2:
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 4, -8
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 46


 530              		.cfi_offset 14, -4
 185:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* System Reset */
 186:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   NVIC_SystemReset();
 531              		.loc 1 186 3 view .LVU121
 532 0002 FFF7FEFF 		bl	__NVIC_SystemReset
 533              	.LVL21:
 534              		.cfi_endproc
 535              	.LFE43:
 537              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 538              		.align	1
 539              		.global	HAL_SYSTICK_Config
 540              		.syntax unified
 541              		.code	16
 542              		.thumb_func
 544              	HAL_SYSTICK_Config:
 545              	.LVL22:
 546              	.LFB44:
 187:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** }
 188:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 189:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /**
 190:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 191:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 192:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
 193:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 194:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *                  - 1  Function failed.
 195:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 196:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 197:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** {
 547              		.loc 1 197 1 view -0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              		.loc 1 197 1 is_stmt 0 view .LVU123
 552 0000 10B5     		push	{r4, lr}
 553              	.LCFI3:
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 4, -8
 556              		.cfi_offset 14, -4
 198:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 557              		.loc 1 198 4 is_stmt 1 view .LVU124
 558              		.loc 1 198 11 is_stmt 0 view .LVU125
 559 0002 FFF7FEFF 		bl	SysTick_Config
 560              	.LVL23:
 199:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** }
 561              		.loc 1 199 1 view .LVU126
 562              		@ sp needed
 563 0006 10BD     		pop	{r4, pc}
 564              		.cfi_endproc
 565              	.LFE44:
 567              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 568              		.align	1
 569              		.global	HAL_NVIC_GetPriority
 570              		.syntax unified
 571              		.code	16
 572              		.thumb_func
 574              	HAL_NVIC_GetPriority:
 575              	.LVL24:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 47


 576              	.LFB45:
 200:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /**
 201:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @}
 202:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 203:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 204:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group2 Peripheral Control functions 
 205:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****  *  @brief   Cortex control functions
 206:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****  *
 207:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** @verbatim
 208:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   ==============================================================================
 209:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 210:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   ==============================================================================
 211:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     [..]
 212:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 213:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****       (NVIC, SYSTICK) functionalities.
 214:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 215:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 216:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** @endverbatim
 217:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @{
 218:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 219:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 220:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 221:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /**
 222:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 223:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 224:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 225:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 226:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @retval None
 227:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 228:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriority(IRQn_Type IRQn)
 229:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** {
 577              		.loc 1 229 1 is_stmt 1 view -0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		.loc 1 229 1 is_stmt 0 view .LVU128
 582 0000 10B5     		push	{r4, lr}
 583              	.LCFI4:
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 4, -8
 586              		.cfi_offset 14, -4
 230:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* Get priority for Cortex-M system or device specific interrupts */
 231:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   return NVIC_GetPriority(IRQn);
 587              		.loc 1 231 3 is_stmt 1 view .LVU129
 588              		.loc 1 231 10 is_stmt 0 view .LVU130
 589 0002 FFF7FEFF 		bl	__NVIC_GetPriority
 590              	.LVL25:
 232:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** }
 591              		.loc 1 232 1 view .LVU131
 592              		@ sp needed
 593 0006 10BD     		pop	{r4, pc}
 594              		.cfi_endproc
 595              	.LFE45:
 597              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 598              		.align	1
 599              		.global	HAL_NVIC_SetPendingIRQ
 600              		.syntax unified
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 48


 601              		.code	16
 602              		.thumb_func
 604              	HAL_NVIC_SetPendingIRQ:
 605              	.LVL26:
 606              	.LFB46:
 233:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 234:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /**
 235:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 236:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 237:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 238:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 239:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @retval None
 240:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 241:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 242:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** {
 607              		.loc 1 242 1 is_stmt 1 view -0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 243:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* Check the parameters */
 244:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 612              		.loc 1 244 3 view .LVU133
 245:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   
 246:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* Set interrupt pending */
 247:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 613              		.loc 1 247 3 view .LVU134
 614              	.LBB40:
 615              	.LBI40:
 697:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 616              		.loc 2 697 22 view .LVU135
 617              	.LBB41:
 699:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 618              		.loc 2 699 3 view .LVU136
 699:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 619              		.loc 2 699 6 is_stmt 0 view .LVU137
 620 0000 0028     		cmp	r0, #0
 621 0002 07DB     		blt	.L32
 701:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 622              		.loc 2 701 5 is_stmt 1 view .LVU138
 701:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 623              		.loc 2 701 58 is_stmt 0 view .LVU139
 624 0004 1F22     		movs	r2, #31
 625 0006 0240     		ands	r2, r0
 701:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 626              		.loc 2 701 22 view .LVU140
 627 0008 0123     		movs	r3, #1
 628 000a 9340     		lsls	r3, r3, r2
 701:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 629              		.loc 2 701 20 view .LVU141
 630 000c 0249     		ldr	r1, .L34
 631 000e 8022     		movs	r2, #128
 632 0010 5200     		lsls	r2, r2, #1
 633 0012 8B50     		str	r3, [r1, r2]
 634              	.LVL27:
 635              	.L32:
 701:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 49


 636              		.loc 2 701 20 view .LVU142
 637              	.LBE41:
 638              	.LBE40:
 248:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** }
 639              		.loc 1 248 1 view .LVU143
 640              		@ sp needed
 641 0014 7047     		bx	lr
 642              	.L35:
 643 0016 C046     		.align	2
 644              	.L34:
 645 0018 00E100E0 		.word	-536813312
 646              		.cfi_endproc
 647              	.LFE46:
 649              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 650              		.align	1
 651              		.global	HAL_NVIC_GetPendingIRQ
 652              		.syntax unified
 653              		.code	16
 654              		.thumb_func
 656              	HAL_NVIC_GetPendingIRQ:
 657              	.LVL28:
 658              	.LFB47:
 249:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 250:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /**
 251:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @brief  Gets Pending Interrupt (reads the pending register in the NVIC
 252:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 253:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 254:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 255:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 256:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 257:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 258:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 259:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 260:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** {
 659              		.loc 1 260 1 is_stmt 1 view -0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 261:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* Check the parameters */
 262:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 664              		.loc 1 262 3 view .LVU145
 263:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   
 264:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 265:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 665              		.loc 1 265 3 view .LVU146
 666              	.LBB42:
 667              	.LBI42:
 678:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 668              		.loc 2 678 26 view .LVU147
 669              	.LBB43:
 680:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 670              		.loc 2 680 3 view .LVU148
 680:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 671              		.loc 2 680 6 is_stmt 0 view .LVU149
 672 0000 0028     		cmp	r0, #0
 673 0002 09DB     		blt	.L38
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 50


 682:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 674              		.loc 2 682 5 is_stmt 1 view .LVU150
 682:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 675              		.loc 2 682 35 is_stmt 0 view .LVU151
 676 0004 054A     		ldr	r2, .L39
 677 0006 8023     		movs	r3, #128
 678 0008 5B00     		lsls	r3, r3, #1
 679 000a D358     		ldr	r3, [r2, r3]
 682:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 680              		.loc 2 682 68 view .LVU152
 681 000c 1F22     		movs	r2, #31
 682 000e 0240     		ands	r2, r0
 682:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 683              		.loc 2 682 80 view .LVU153
 684 0010 D340     		lsrs	r3, r3, r2
 682:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 685              		.loc 2 682 12 view .LVU154
 686 0012 0120     		movs	r0, #1
 687              	.LVL29:
 682:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 688              		.loc 2 682 12 view .LVU155
 689 0014 1840     		ands	r0, r3
 690              	.LVL30:
 691              	.L36:
 682:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 692              		.loc 2 682 12 view .LVU156
 693              	.LBE43:
 694              	.LBE42:
 266:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** }
 695              		.loc 1 266 1 view .LVU157
 696              		@ sp needed
 697 0016 7047     		bx	lr
 698              	.LVL31:
 699              	.L38:
 700              	.LBB45:
 701              	.LBB44:
 686:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 702              		.loc 2 686 11 view .LVU158
 703 0018 0020     		movs	r0, #0
 704              	.LVL32:
 686:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 705              		.loc 2 686 11 view .LVU159
 706              	.LBE44:
 707              	.LBE45:
 265:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** }
 708              		.loc 1 265 10 view .LVU160
 709 001a FCE7     		b	.L36
 710              	.L40:
 711              		.align	2
 712              	.L39:
 713 001c 00E100E0 		.word	-536813312
 714              		.cfi_endproc
 715              	.LFE47:
 717              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 718              		.align	1
 719              		.global	HAL_NVIC_ClearPendingIRQ
 720              		.syntax unified
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 51


 721              		.code	16
 722              		.thumb_func
 724              	HAL_NVIC_ClearPendingIRQ:
 725              	.LVL33:
 726              	.LFB48:
 267:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 268:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /**
 269:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @brief  Clears the pending bit of an external interrupt.
 270:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 271:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 272:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 273:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @retval None
 274:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 275:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 276:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** {
 727              		.loc 1 276 1 is_stmt 1 view -0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              		@ link register save eliminated.
 277:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* Check the parameters */
 278:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 732              		.loc 1 278 3 view .LVU162
 279:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   
 280:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* Clear pending interrupt */
 281:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 733              		.loc 1 281 3 view .LVU163
 734              	.LBB46:
 735              	.LBI46:
 712:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h **** {
 736              		.loc 2 712 22 view .LVU164
 737              	.LBB47:
 714:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 738              		.loc 2 714 3 view .LVU165
 714:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   {
 739              		.loc 2 714 6 is_stmt 0 view .LVU166
 740 0000 0028     		cmp	r0, #0
 741 0002 07DB     		blt	.L41
 716:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 742              		.loc 2 716 5 is_stmt 1 view .LVU167
 716:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 743              		.loc 2 716 58 is_stmt 0 view .LVU168
 744 0004 1F22     		movs	r2, #31
 745 0006 0240     		ands	r2, r0
 716:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 746              		.loc 2 716 22 view .LVU169
 747 0008 0123     		movs	r3, #1
 748 000a 9340     		lsls	r3, r3, r2
 716:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
 749              		.loc 2 716 20 view .LVU170
 750 000c 0249     		ldr	r1, .L43
 751 000e C022     		movs	r2, #192
 752 0010 5200     		lsls	r2, r2, #1
 753 0012 8B50     		str	r3, [r1, r2]
 754              	.LVL34:
 755              	.L41:
 716:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Include\core_cm0.h ****   }
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 52


 756              		.loc 2 716 20 view .LVU171
 757              	.LBE47:
 758              	.LBE46:
 282:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** }
 759              		.loc 1 282 1 view .LVU172
 760              		@ sp needed
 761 0014 7047     		bx	lr
 762              	.L44:
 763 0016 C046     		.align	2
 764              	.L43:
 765 0018 00E100E0 		.word	-536813312
 766              		.cfi_endproc
 767              	.LFE48:
 769              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 770              		.align	1
 771              		.global	HAL_SYSTICK_CLKSourceConfig
 772              		.syntax unified
 773              		.code	16
 774              		.thumb_func
 776              	HAL_SYSTICK_CLKSourceConfig:
 777              	.LVL35:
 778              	.LFB49:
 283:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 284:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /**
 285:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 286:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @param  CLKSource specifies the SysTick clock source.
 287:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 288:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 289:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 290:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @retval None
 291:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 292:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 293:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** {
 779              		.loc 1 293 1 is_stmt 1 view -0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 0
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783              		@ link register save eliminated.
 294:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* Check the parameters */
 295:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 784              		.loc 1 295 3 view .LVU174
 296:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 785              		.loc 1 296 3 view .LVU175
 786              		.loc 1 296 6 is_stmt 0 view .LVU176
 787 0000 0428     		cmp	r0, #4
 788 0002 05D0     		beq	.L48
 297:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   {
 298:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 299:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   }
 300:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   else
 301:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   {
 302:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 789              		.loc 1 302 5 is_stmt 1 view .LVU177
 790              		.loc 1 302 12 is_stmt 0 view .LVU178
 791 0004 054A     		ldr	r2, .L49
 792 0006 1368     		ldr	r3, [r2]
 793              		.loc 1 302 19 view .LVU179
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 53


 794 0008 0421     		movs	r1, #4
 795 000a 8B43     		bics	r3, r1
 796 000c 1360     		str	r3, [r2]
 797              	.L45:
 303:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   }
 304:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** }
 798              		.loc 1 304 1 view .LVU180
 799              		@ sp needed
 800 000e 7047     		bx	lr
 801              	.L48:
 298:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   }
 802              		.loc 1 298 5 is_stmt 1 view .LVU181
 298:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   }
 803              		.loc 1 298 12 is_stmt 0 view .LVU182
 804 0010 024A     		ldr	r2, .L49
 805 0012 1368     		ldr	r3, [r2]
 298:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   }
 806              		.loc 1 298 19 view .LVU183
 807 0014 0421     		movs	r1, #4
 808 0016 0B43     		orrs	r3, r1
 809 0018 1360     		str	r3, [r2]
 810 001a F8E7     		b	.L45
 811              	.L50:
 812              		.align	2
 813              	.L49:
 814 001c 10E000E0 		.word	-536813552
 815              		.cfi_endproc
 816              	.LFE49:
 818              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 819              		.align	1
 820              		.weak	HAL_SYSTICK_Callback
 821              		.syntax unified
 822              		.code	16
 823              		.thumb_func
 825              	HAL_SYSTICK_Callback:
 826              	.LFB51:
 305:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 306:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /**
 307:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 308:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @retval None
 309:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 310:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 311:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** {
 312:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 313:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** }
 314:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 315:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** /**
 316:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 317:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   * @retval None
 318:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   */
 319:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 320:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** {
 827              		.loc 1 320 1 is_stmt 1 view -0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 0
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831              		@ link register save eliminated.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 54


 321:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 322:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 323:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****    */
 324:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** }
 832              		.loc 1 324 1 view .LVU185
 833              		@ sp needed
 834 0000 7047     		bx	lr
 835              		.cfi_endproc
 836              	.LFE51:
 838              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 839              		.align	1
 840              		.global	HAL_SYSTICK_IRQHandler
 841              		.syntax unified
 842              		.code	16
 843              		.thumb_func
 845              	HAL_SYSTICK_IRQHandler:
 846              	.LFB50:
 311:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 847              		.loc 1 311 1 view -0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851 0000 10B5     		push	{r4, lr}
 852              	.LCFI5:
 853              		.cfi_def_cfa_offset 8
 854              		.cfi_offset 4, -8
 855              		.cfi_offset 14, -4
 312:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** }
 856              		.loc 1 312 3 view .LVU187
 857 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 858              	.LVL36:
 313:C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/STM32F0xx_HAL_Driver/Src\stm32f0xx_hal_cortex.c **** 
 859              		.loc 1 313 1 is_stmt 0 view .LVU188
 860              		@ sp needed
 861 0006 10BD     		pop	{r4, pc}
 862              		.cfi_endproc
 863              	.LFE50:
 865              		.text
 866              	.Letext0:
 867              		.file 4 "C:/Users/Alex/STM32Cube/Repository/STM32Cube_FW_F0_V1.11.5/Drivers/CMSIS/Device/ST/STM32F
 868              		.file 5 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/ma
 869              		.file 6 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/sy
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_cortex.c
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:19     .text.__NVIC_SetPriority:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:24     .text.__NVIC_SetPriority:00000000 __NVIC_SetPriority
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:122    .text.__NVIC_SetPriority:00000058 $d
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:128    .text.__NVIC_GetPriority:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:133    .text.__NVIC_GetPriority:00000000 __NVIC_GetPriority
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:200    .text.__NVIC_GetPriority:00000044 $d
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:206    .text.__NVIC_SystemReset:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:211    .text.__NVIC_SystemReset:00000000 __NVIC_SystemReset
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:267    .text.__NVIC_SystemReset:00000014 $d
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:273    .text.SysTick_Config:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:278    .text.SysTick_Config:00000000 SysTick_Config
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:347    .text.SysTick_Config:00000030 $d
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:353    .text.HAL_NVIC_SetPriority:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:359    .text.HAL_NVIC_SetPriority:00000000 HAL_NVIC_SetPriority
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:384    .text.HAL_NVIC_EnableIRQ:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:390    .text.HAL_NVIC_EnableIRQ:00000000 HAL_NVIC_EnableIRQ
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:429    .text.HAL_NVIC_EnableIRQ:00000014 $d
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:434    .text.HAL_NVIC_DisableIRQ:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:440    .text.HAL_NVIC_DisableIRQ:00000000 HAL_NVIC_DisableIRQ
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:508    .text.HAL_NVIC_DisableIRQ:0000001c $d
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:513    .text.HAL_NVIC_SystemReset:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:519    .text.HAL_NVIC_SystemReset:00000000 HAL_NVIC_SystemReset
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:538    .text.HAL_SYSTICK_Config:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:544    .text.HAL_SYSTICK_Config:00000000 HAL_SYSTICK_Config
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:568    .text.HAL_NVIC_GetPriority:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:574    .text.HAL_NVIC_GetPriority:00000000 HAL_NVIC_GetPriority
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:598    .text.HAL_NVIC_SetPendingIRQ:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:604    .text.HAL_NVIC_SetPendingIRQ:00000000 HAL_NVIC_SetPendingIRQ
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:645    .text.HAL_NVIC_SetPendingIRQ:00000018 $d
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:650    .text.HAL_NVIC_GetPendingIRQ:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:656    .text.HAL_NVIC_GetPendingIRQ:00000000 HAL_NVIC_GetPendingIRQ
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:713    .text.HAL_NVIC_GetPendingIRQ:0000001c $d
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:718    .text.HAL_NVIC_ClearPendingIRQ:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:724    .text.HAL_NVIC_ClearPendingIRQ:00000000 HAL_NVIC_ClearPendingIRQ
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:765    .text.HAL_NVIC_ClearPendingIRQ:00000018 $d
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:770    .text.HAL_SYSTICK_CLKSourceConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:776    .text.HAL_SYSTICK_CLKSourceConfig:00000000 HAL_SYSTICK_CLKSourceConfig
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:814    .text.HAL_SYSTICK_CLKSourceConfig:0000001c $d
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:819    .text.HAL_SYSTICK_Callback:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:825    .text.HAL_SYSTICK_Callback:00000000 HAL_SYSTICK_Callback
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:839    .text.HAL_SYSTICK_IRQHandler:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchlRzWh.s:845    .text.HAL_SYSTICK_IRQHandler:00000000 HAL_SYSTICK_IRQHandler

NO UNDEFINED SYMBOLS
